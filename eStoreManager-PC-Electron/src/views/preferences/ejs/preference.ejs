<%- include('../../shared/ejs/header', {title: 'Preferences'}) %>
<link rel="stylesheet" type="text/css" href="../css/preferences.css">

<div id="saved" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Notification</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <p>All settings were saved!.</p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
        </div>
    </div>
</div>


<div class="container">
    <img src="../images/settings.png" style="height: 4rem; width: 4rem">
    <h1>Preferences</h1>

    <div class="col-md-12 order-md-1">
       
        <div>

            <hr class="mb-2">

            <h4>Server connection</h4>
            <div class="row">
                <div class="col-md-2">
                    <div class="d-block my-3">
                        <div class="custom-control custom-radio">
                            <input id="http" name="api-protocol" type="radio" class="custom-control-input" checked required>
                            <label class="custom-control-label" for="http">http</label>
                        </div>
                        <div class="custom-control custom-radio">
                            <input id="https" name="api-protocol" type="radio" class="custom-control-input" required>
                            <label class="custom-control-label" for="https">https</label>
                        </div>
                    </div>
                </div>
                <div class="col-md-5">
                    <label for="api-hostname">Hostname</label>
                    <input type="text" class="form-control" id="api-hostname" placeholder="" value="" required>
                </div>
                <div class="col-md-5">
                    <label for="api-port">Port</label>
                    <input type="text" class="form-control" id="api-port" placeholder="" value="" required>
                </div>
            </div>

            <hr class="mb-2">

            <h4>Store Information</h4>
            <div class="row">
                <div class="col-md-8">
                    <label for="store-name">Store Name</label>
                    <input type="text" class="form-control" id="store-name" placeholder="" value="" required>
                </div>
                <div class="col-md-8">
                    <label for="store-address">Store Address</label>
                    <input type="text" class="form-control" id="store-address" placeholder="" value="" required>
                </div>
            </div>
            

            <hr class="mb-2">

            <h4>Application</h4>
            <div class="custom-control custom-checkbox">
                <input type="checkbox" class="custom-control-input" id="start-on-boot">
                <label class="custom-control-label" for="start-on-boot"> Start on boot.</label>
                <button class="btn btn-warning">Create Desktop shortcut</button>
            </div>

            <hr class="mb-2">
            
            <button class="btn btn-primary btn-lg btn-block" id="save">Save Settings</button>
        </div>
    </div>
</div>

</div>

<script>
    const settings = require('electron-settings');
    const { dialog } = require('electron');

    // Get current settings
    let hostname = settings.get('api_config.hostname');
    let port = settings.get('api_config.port');
    let protocol = settings.get('api_config.protocol');
    let storeName = settings.get('store_info.name');
    let storeAddress = settings.get('store_info.address');
    let startOnBoot = settings.get('app_settings.startonboot');

    // Display current settings
    if (protocol === "http") {
        $('#http').prop('checked', true);
    } else {
        $('#https').prop('checked', true);
    }
    
    $("#api-hostname").val(hostname);
    $("#api-port").val(port);
    $("#store-name").val(storeName);
    $("#store-address").val(storeAddress);
    $("#start-on-boot").prop('checked', startOnBoot);


    // Handle save button
    $("#save").click(function() {
        settings.set('api_config.hostname', $("#api-hostname").val());
        settings.set('api_config.port', $("#api-port").val());
        settings.set('store_info.name', $("#store-name").val());
        settings.set('store_info.address', $("#store-address").val());
        settings.set('app_settings.startonboot', $("#start-on-boot").prop('checked'));
        settings.set('api_config.protocol', $('input[name="api-protocol"]:checked')[0].id);

        console.log($("#start-on-boot").prop('checked'));

        $('#saved').modal();
        
    });

</script>


<%- include('../../shared/ejs/footer') %>